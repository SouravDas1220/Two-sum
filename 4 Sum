class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n=nums.size();
        vector<vector<int>> ans;
        if(nums.empty())
            return ans;
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            long long target3=target-nums[i];
            for(int j=i+1;j<n;j++){
                long long target_2=target3-nums[j];
                int left=j+1;
                int right=n-1;
               while(left<right){
                   if((nums[left]+nums[right])>target_2) 
                    right--;
                else if((nums[left]+nums[right])<target_2)
                    left++;
                else{
                    vector<int> temp(4,0);
                    temp[0]=nums[i];
                    temp[1]=nums[j];
                    temp[2]=nums[left];
                    temp[3]=nums[right];
                    ans.push_back(temp);
                    while(left<right && nums[left]==temp[2]) 
                    ++left;
                while(left<right && nums[right]==temp[3])
                    --right;
                }
               }
            while(j+1<n && nums[j]==nums[j+1]) 
                j++;
        }
        while (i+1<n && nums[i]==nums[i+1])
            i++;
        }
        return ans;
    }
};
